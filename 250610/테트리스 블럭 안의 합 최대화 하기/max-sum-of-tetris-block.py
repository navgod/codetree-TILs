n,m = map(int, input().split())
board = [list(map(int , input().split())) for _ in range(n)]

blocks = [
    [(0,0),(0,1),(1,0),(1,1)], # 정사각형
    [(0,0),(0,1),(0,2),(0,3)], # 긴막대
    [(0,0),(0,-1),(0,-2),(0,-3)],
    [(0,0),(-1,0),(-2,0),(-3,0)],
    [(0,0),(1,0),(2,0),(3,0)],
    [(0,0),(1,0),(2,0),(2,1)], # L막대
    [(0,0),(0,1),(0,2),(-1,2)],
    [(0,0),(-1,0),(-2,0),(-2,-1)],
    [(0,0),(0,-1),(0,-2),(1,-2)],
    [(0,0),(1,0),(2,0),(2,-1)], # L막대 뒤집
    [(0,0),(0,1),(0,2),(1,2)],
    [(0,0),(-1,0),(-2,0),(-2,1)],
    [(0,0),(0,-1),(0,-2),(-1,-2)],
    [(0,0),(1,0),(1,1),(2,1)], # 지그 막대
    [(0,0),(0,1),(-1,1),(-1,2)],
    [(0,0),(-1,0),(-1,-1),(-2,-1)],
    [(0,0),(0,-1),(1,-1),(1,-2)],
    [(0,0),(1,0),(1,-1),(2,-1)], #지그 막대 뒤집
    [(0,0),(0,1),(1,1),(1,2)],
    [(0,0),(-1,0),(-1,1),(-2,1)],
    [(0,0),(0,-1),(-1,-1),(-1,-2)],
    [(0,0),(1,0),(1,1),(2,0)], # ㅏ막대
    [(0,0),(0,1),(-1,1),(0,2)],
    [(0,0),(-1,0),(-1,-1),(-2,0)],
    [(0,0),(0,-1),(1,-1),(0,-2)],
    [(0,0),(1,0),(1,-1),(2,0)], #ㅏ 막대 뒤집
    [(0,0),(0,1),(1,1),(0,2)],
    [(0,0),(-1,0),(-1,1),(-2,0)],
    [(0,0),(0,-1),(-1,-1),(0,-2)]
]
ans = -1
def is_range(r,c):
    return 0<=r<n and 0<=c<m
for row in range(n):
    for col in range(m):
        for block in blocks:
            res = 0
            is_inrange = True
            for dr, dc in block:
                nr , nc = row + dr , col + dc
                if not  is_range(nr,nc):
                    is_inrange = False
                    break
                res += board[nr][nc]
            if is_inrange:
                ans = max(ans,res)
print(ans)